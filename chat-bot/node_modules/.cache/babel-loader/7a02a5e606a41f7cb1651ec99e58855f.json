{"ast":null,"code":"var _jsxFileName = \"/Users/lisa/Desktop/ChatBotCli/chat-bot/src/direflow-components/chat-bot/App.js\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { EventContext, Styled } from 'direflow-component';\nimport styles from './App.css';\nimport { FormBot } from \"./FormBot\";\n\nconst App = props => {\n  const dispatch = useContext(EventContext);\n\n  const handleClick = () => {\n    const event = new Event('my-event');\n    dispatch(event);\n  };\n\n  const renderSampleList = props.sampleList.map(sample => /*#__PURE__*/React.createElement(\"div\", {\n    key: sample,\n    className: \"sample-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, \"\\u2192 \", sample));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FormBot, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }));\n};\n\nApp.defaultProps = {\n  componentTitle: 'Chat Bot',\n  sampleList: ['Create with React', 'Build as Web Component', 'Use it anywhere!']\n};\nApp.propTypes = {\n  componentTitle: PropTypes.string,\n  sampleList: PropTypes.array\n};\nexport default App;","map":{"version":3,"sources":["/Users/lisa/Desktop/ChatBotCli/chat-bot/src/direflow-components/chat-bot/App.js"],"names":["React","useContext","PropTypes","EventContext","Styled","styles","FormBot","App","props","dispatch","handleClick","event","Event","renderSampleList","sampleList","map","sample","defaultProps","componentTitle","propTypes","string","array"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,EAAuBC,MAAvB,QAAqC,oBAArC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,OAAT,QAAwB,WAAxB;;AACA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACrB,QAAMC,QAAQ,GAAGR,UAAU,CAACE,YAAD,CAA3B;;AAEA,QAAMO,WAAW,GAAG,MAAM;AACxB,UAAMC,KAAK,GAAG,IAAIC,KAAJ,CAAU,UAAV,CAAd;AACAH,IAAAA,QAAQ,CAACE,KAAD,CAAR;AACD,GAHD;;AAKA,QAAME,gBAAgB,GAAGL,KAAK,CAACM,UAAN,CAAiBC,GAAjB,CAAsBC,MAAD,iBAC5C;AAAK,IAAA,GAAG,EAAEA,MAAV;AAAkB,IAAA,SAAS,EAAC,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACKA,MADL,CADuB,CAAzB;AAMA,sBACE,uDACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAmBD,CAjCD;;AAmCAT,GAAG,CAACU,YAAJ,GAAmB;AACjBC,EAAAA,cAAc,EAAE,UADC;AAEjBJ,EAAAA,UAAU,EAAE,CACV,mBADU,EAEV,wBAFU,EAGV,kBAHU;AAFK,CAAnB;AASAP,GAAG,CAACY,SAAJ,GAAgB;AACdD,EAAAA,cAAc,EAAEhB,SAAS,CAACkB,MADZ;AAEdN,EAAAA,UAAU,EAAEZ,SAAS,CAACmB;AAFR,CAAhB;AAKA,eAAed,GAAf","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { EventContext, Styled } from 'direflow-component';\nimport styles from './App.css';\nimport { FormBot } from \"./FormBot\"\nconst App = (props) => {\n  const dispatch = useContext(EventContext);\n\n  const handleClick = () => {\n    const event = new Event('my-event');\n    dispatch(event);\n  };\n\n  const renderSampleList = props.sampleList.map((sample) => (\n    <div key={sample} className='sample-text'>\n      â†’ {sample}\n    </div>\n  ));\n\n  return (\n    <>\n      <FormBot />\n      {/* <Styled styles={styles}>\n        <div className='app'>\n          <div className='top'>\n            <div className='header-image' />\n          </div>\n          <div className='bottom'>\n            <div className='header-title'>{props.componentTitle}</div>\n            <div>{renderSampleList}</div>\n            <button className='button' onClick={handleClick}>\n              Click me!\n          </button>\n          </div>\n        </div>\n      </Styled> */}\n    </>\n  );\n};\n\nApp.defaultProps = {\n  componentTitle: 'Chat Bot',\n  sampleList: [\n    'Create with React',\n    'Build as Web Component',\n    'Use it anywhere!',\n  ],\n}\n\nApp.propTypes = {\n  componentTitle: PropTypes.string,\n  sampleList: PropTypes.array,\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}